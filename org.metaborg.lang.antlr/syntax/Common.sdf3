module Common

lexical syntax

  ID             = [a-zA-Z] [a-zA-Z0-9\_]*
  INT            = "-"? [0-9]+
  STRING         = "\"" StringChar* "\""
  StringChar     = ~[\"\n]
  StringChar     = "\\\""
  StringChar     = BackSlashChar
  BackSlashChar  = "\\"
  LAYOUT         = [\ \t\n\r]

  // Reject keywords

  ID = "fragment" {reject}
  ID = "lexer" {reject}
  ID = "parser" {reject}
  ID = "grammar" {reject}
  ID = "returns" {reject}
  ID = "locals" {reject}
  ID = "throws" {reject}
  ID = "catch" {reject}
  ID = "finally" {reject}
  ID = "mode" {reject}
  ID = "options" {reject}
  ID = "tokens" {reject}

  // Prevent ambiguity with predefiend tokens

  ID = "EOF" {reject}

lexical restrictions

  // Ensure greedy matching for lexicals

  INT           -/- [0-9]
  ID            -/- [a-zA-Z0-9\_]

  // Backslash chars in strings may not be followed by "

  BackSlashChar -/- [\"]

context-free restrictions

  // Ensure greedy matching of layout

  LAYOUT? -/- [\ \t\n\r]
